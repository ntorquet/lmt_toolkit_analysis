x-image: &lmt_image
  build:
    context: .
  image: lmt_toolkit_analysis_web
  
services:
  web:
    <<: *lmt_image
    volumes:
      - .:/app
      - ./media:/app/media
    ports:
      - "8000:8000"
    # env_file:
    #   - .env
    environment:
      DB_HOST: db
      FIXTURE_FILE: /app/fixtures/export_data_v1_2.json
      DJANGO_RUNNING_IN_DOCKER: "true"
      CELERY_BROKER_URL: amqp://guest:guest@rabbit:5672//
      SERVICE_ROLE: web
      API_BASE_URL: http://web:8000
#      RABBITMQ_SERVER: rabbit
#    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - rabbit

  # RabbitMQ - queue
  rabbit:
    restart: always
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
  frontend:
    build: ../nuxt-api
    volumes:
      - ../nuxt-api:/app
      - frontend_node_modules:/app/node_modules
#      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - web
#    user: "${UID:-1000}:${GID:-1000}"

  # Celery worker
  worker:
    <<: *lmt_image
    volumes:
      - .:/app
    depends_on:
      - rabbit
      - web
    environment:
      CELERY_BROKER_URL: amqp://guest:guest@rabbit:5672//
      SERVICE_ROLE: worker
      API_BASE_URL: http://web:8000

networks:
  default:
    name: lmt_toolkit_analysis_network

volumes:
  frontend_node_modules:
